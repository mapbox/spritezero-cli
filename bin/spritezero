#!/usr/bin/env node

var spritezero = require('spritezero');
var fs = require('fs');
var queue = require('queue-async');
var multiline = require('multiline');
var path = require('path');
var argv = require('minimist')(process.argv.slice(2), {
  boolean: ['retina', 'h', 'help']
});
var stringify = require('json-stable-stringify');

function filepaths (dir) {
  return fs.readdirSync(dir)
    .filter(function (d) {
      return !d.match(/^\./);
    })
    .map(function (d) {
      return path.join(dir, d);
    });
}

function showHelp () {
  console.log(multiline(function () {
  /*
  spritezero

  Generate sprite sheets for maps and the web using SVG files as input

  Usage
  pageres <output> <inputdir>

  Example
  pageres maki maki/
  */}));
}

if (argv.help || argv._.length < 2) {
  showHelp();
  /* istanbul ignore next */
  process.exit(1);
}

var ratio = 1;

if (argv.retina) {
  ratio = 2;
} else if (argv.ratio) {
  ratio = parseFloat(argv.ratio);
}

var outfile = argv._[0];
var input = argv._[1];

function loadFile (file, callback) {
  fs.readFile(file, function (err, res) {
    return callback(err, {
      svg: res,
      id: path.basename(file).replace('.svg', '')
    });
  });
}

function sortById (a, b) {
  return b.id < a.id;
}

var q = queue(16);

filepaths(input).forEach(function (file) {
  q.defer(loadFile, file);
});

q.awaitAll(function (err, buffers) {
  if (err) throw err;
  buffers.sort(sortById);
  spritezero.generateLayout(buffers, ratio, true, function (err, formattedLayout) {
    if (err) throw err;
    fs.writeFile(outfile + '.json', stringify(formattedLayout, {space: '  '}),
      'utf8', function (err) {
        if (err) throw err;
      });
  });
  spritezero.generateLayout(buffers, ratio, false, function (err, layout) {
    if (err) throw err;
    spritezero.generateImage(layout, function (err, image) {
      if (err) throw err;
      fs.writeFile(outfile + '.png', image, function (err) {
        if (err) throw err;
      });
    });
  });
});
